---
title: "Data Files"
description: "Downloadable genome feature, annotation, and related tab-delimited files."
format:
  html:
    code-copy: true
editor: visual
execute:
  echo: false
  warning: false
  message: false
---

```{r setup, include=FALSE}
library(tidyverse)
library(DT)
library(readxl)
library(plotly)
library(readr)
library(dplyr)
library(tibble)
library(knitr)
library(gt)
library(htmltools)
```

```{r, include=FALSE}


# Define key paths and tool directories


Apul_gene_url <- "https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-gene_count_matrix.csv"

Apul_mirna_url <- "https://raw.githubusercontent.com/urol-e5/timeseries_molecular/refs/heads/main/M-multi-species/output/10-format-miRNA-counts/Apul_miRNA_counts_formatted.txt"

Apul_lncRNA_url <- "https://gannet.fish.washington.edu/v1_web/owlshell/bu-github/timeseries_molecular/D-Apul/output/33-Apul-lncRNA-matrix/Apul_lncRNA_counts_filtered.txt"

Apul_mCpG_url <- "https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/22.5-Apul-multiomic-SR/Apul-filtered-WGBS-CpG-counts.csv"










# read in 


Apul_gene <- read_csv(Apul_gene_url)
Apul_mirna <- read_delim(Apul_mirna_url, delim = "\t", col_names = TRUE)
Apul_lncRNA <- read_delim(Apul_lncRNA_url, delim = "\t", col_names = TRUE, skip = 7)
Apul_mCpG <- read_csv(Apul_mCpG_url)

# helper to count physical lines (including header)
count_lines <- function(url) length(readr::read_lines(url))

# precompute line counts to reuse in inline code
lines_gene   <- count_lines(Apul_gene_url)
lines_mirna  <- count_lines(Apul_mirna_url)
lines_lncRNA <- count_lines(Apul_lncRNA_url)
lines_mCpG   <- count_lines(Apul_mCpG_url)

# Export these as environment variables for bash chunks.
# Sys.setenv(
#   Apul_gene = Apul_gene,
#   Apul_mirna = Apul_mirna,
#   Apul_lncRNA = Apul_lncRNA,
#   Apul_mCpG = Apul_mCpG
# )
```

```{r}

# Build summary tibble
summary_tbl <- tibble(
  File   = c("Apul_gene", "Apul_mirna", "Apul_lncRNA", "Apul_mCpG"),
  Rows   = c(nrow(Apul_gene), nrow(Apul_mirna), nrow(Apul_lncRNA), nrow(Apul_mCpG)),
  Cols   = c(ncol(Apul_gene), ncol(Apul_mirna), ncol(Apul_lncRNA), ncol(Apul_mCpG))
)

# Display nicely with gt
summary_tbl %>%
  gt() %>%
  tab_header(
    title = "Summary of Data Files",
  )
```

# Apul

## Gene Counts

```{r}
#| echo: false
#| results: asis


cat(as.character(
  tags$a(
    href = Apul_gene_url,
    class = "btn btn-primary",
    target = "_blank",
    download = "Apul_gene_count_matrix.csv",
    "Download Gene Counts"
  )
))
```

```{r}
#| results: asis
# (YAML already has format: html: code-copy: true)

#labs <- c("direct url")
urls <- c(Apul_gene_url)

for (i in seq_along(urls)) {
  #cat("**", labs[i], "**\n\n", sep = "")
  # Use bash so Quarto shows a copy button for each block
  cat("``` bash\n", urls[i], "\n```\n\n", sep = "")
}
```

```{r}
Apul_gene |>
  rowid_to_column("Row") |>
  slice_head(n = 4) |>
  gt()
```

## miRNA Counts

```{r}
#| echo: false
#| results: asis


cat(as.character(
  tags$a(
    href = Apul_mirna_url,
    class = "btn btn-primary",
    target = "_blank",
    download = "Apul_gene_count_matrix.csv",
    "Download miRNA Counts"
  )
))
```

```{r}
#| results: asis
# (YAML already has format: html: code-copy: true)

#labs <- c("direct url")
urls <- c(Apul_mirna_url)

for (i in seq_along(urls)) {
  #cat("**", labs[i], "**\n\n", sep = "")
  # Use bash so Quarto shows a copy button for each block
  cat("``` bash\n", urls[i], "\n```\n\n", sep = "")
}
```

```{r}
Apul_mirna |>
  rowid_to_column("Row") |>
  slice_head(n = 4) |>
  gt()
```

## lncRNA Counts

```{r}
#| echo: false
#| results: asis


cat(as.character(
  tags$a(
    href = Apul_lncRNA_url,
    class = "btn btn-primary",
    target = "_blank",
    download = "Apul_gene_count_matrix.csv",
    "Download lncRNA Counts"
  )
))
```

```{r}
#| results: asis
# (YAML already has format: html: code-copy: true)

#labs <- c("direct url")
urls <- c(Apul_lncRNA_url)

for (i in seq_along(urls)) {
  #cat("**", labs[i], "**\n\n", sep = "")
  # Use bash so Quarto shows a copy button for each block
  cat("``` bash\n", urls[i], "\n```\n\n", sep = "")
}
```

```{r}
#| tbl-cap: "Apul_lncRNA (first 10 rows with row numbers)"
Apul_lncRNA |>
  rowid_to_column("Row") |>
  slice_head(n = 4) |>
  gt()
```

## mCpG Percentage

```{r}
#| echo: false
#| results: asis


cat(as.character(
  tags$a(
    href = Apul_mCpG_url,
    class = "btn btn-primary",
    target = "_blank",
    download = "Apul_gene_count_matrix.csv",
    "Download MCpG Percentage"
  )
))
```

```{r}
#| results: asis
# (YAML already has format: html: code-copy: true)

#labs <- c("direct url")
urls <- c(Apul_mCpG_url)

for (i in seq_along(urls)) {
  #cat("**", labs[i], "**\n\n", sep = "")
  # Use bash so Quarto shows a copy button for each block
  cat("``` bash\n", urls[i], "\n```\n\n", sep = "")
}
```

```{r}
#| tbl-cap: "Apul_mCpG (first 10 rows with row numbers)"
Apul_mCpG |>
  rowid_to_column("Row") |>
  slice_head(n = 4) |>
  gt()
```
